<?php

/**
 * Generated by the WordPress Meta Box Generator at http://goo.gl/8nwllb
 */
class Rational_Meta_Box {
	private $screens = array(
		'page',
	);
	private $fields = array(
		array(
			'id' => 'rm-margin',
			'label' => '余白を削除する',
			'type' => 'checkbox',
		),
	);

	/**
	 * Class construct method. Adds actions to their respective WordPress hooks.
	 */
	public function __construct() {
		add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );
		add_action( 'save_post', array( $this, 'save_post' ) );
	}

	/**
	 * Hooks into WordPress' add_meta_boxes function.
	 * Goes through screens (post types) and adds the meta box.
	 */
	public function add_meta_boxes() {
		foreach ( $this->screens as $screen ) {
			add_meta_box(
				'bp-extension',
				__( 'タイトルなし余白削除', 'bp-extension' ),
				array( $this, 'add_meta_box_callback' ),
				$screen,
				'side',
				'default'
			);
		}
	}

	/**
	 * Generates the HTML for the meta box
	 * 
	 * @param object $post WordPress post object
	 */
	public function add_meta_box_callback( $post ) {
		wp_nonce_field( 'bp-extension_data', 'bp-extension_nonce' );
		echo 'タイトルなし時に、余白を削除します';
		$this->generate_fields( $post );
	}

	/**
	 * Generates the field's HTML for the meta box.
	 */
	public function generate_fields( $post ) {
		$output = '';
		foreach ( $this->fields as $field ) {
			$label = '<label for="' . $field['id'] . '">' . $field['label'] . '</label>';
			$db_value = get_post_meta( $post->ID, 'bp-extension_' . $field['id'], true );
			switch ( $field['type'] ) {
				case 'checkbox':
					$input = sprintf(
						'<input %s id="%s" name="%s" type="checkbox" value="1">',
						$db_value === '1' ? 'checked' : '',
						$field['id'],
						$field['id']
					);
					break;
				default:
					$input = sprintf(
						'<input id="%s" name="%s" type="%s" value="%s">',
						$field['id'],
						$field['id'],
						$field['type'],
						$db_value
					);
			}
			$output .= '<p><label>' . $input . ' 削除する</label></p>';
		}
		echo $output;
	}

	/**
	 * Hooks into WordPress' save_post function
	 */
	public function save_post( $post_id ) {
		if ( ! isset( $_POST['bp-extension_nonce'] ) )
			return $post_id;

		$nonce = $_POST['bp-extension_nonce'];
		if ( !wp_verify_nonce( $nonce, 'bp-extension_data' ) )
			return $post_id;

		if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE )
			return $post_id;

		foreach ( $this->fields as $field ) {
			if ( isset( $_POST[ $field['id'] ] ) ) {
				switch ( $field['type'] ) {
					case 'email':
						$_POST[ $field['id'] ] = sanitize_email( $_POST[ $field['id'] ] );
						break;
					case 'text':
						$_POST[ $field['id'] ] = sanitize_text_field( $_POST[ $field['id'] ] );
						break;
				}
				update_post_meta( $post_id, 'bp-extension_' . $field['id'], $_POST[ $field['id'] ] );
			} else if ( $field['type'] === 'checkbox' ) {
				update_post_meta( $post_id, 'bp-extension_' . $field['id'], '0' );
			}
		}
	}
}
new Rational_Meta_Box;

/* cssの出力 */
add_action( 'wp_head', function () { 

	$p = get_post();
	$hide_title = ! empty( get_post_meta( $p->ID, 'businesspress_hide_page_title', true ) );
	$rm_margin = get_post_meta( $p->ID, 'bp-extension_rm-margin', true );

	if ( ! is_null( $p ) && $hide_title && $rm_margin ) {
?>		
<style id="bp-ext-rm-margin">
.site-header {
	margin-bottom: 0;
}

</style>
<?php
	}
} );
